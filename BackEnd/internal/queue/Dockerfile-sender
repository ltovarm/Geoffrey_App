FROM golang:1.20-alpine AS builder

# Move to working directory (/build).
WORKDIR /build

# Copy and download dependency using go mod.
COPY ./queue/go.mod ./queue/go.sum ./
RUN go mod download

# Copy the code into the container.
COPY ./queue/sender/main.go .

# Set necessary environment variables needed for our image and build the sender.
ENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64
#-ldflags '[pattern=]arg list' arguments to pass on each go tool link invocation.
# La opción -s elimina los símbolos de depuración del archivo binario, lo que hace que el archivo sea más pequeño.
# La opción -w elimina información de depuración adicional, como la información de la tabla de símbolos,
# lo que también reduce el tamaño del archivo binario.
# En general, se recomienda usar estas opciones cuando se compila un archivo binario para producción.
# Sin embargo, es posible que desees omitirlas si estás compilando el archivo binario
# para fines de depuración o si necesitas la información de depuración para alguna otra tarea.
RUN go build -ldflags="-s -w" -o sender .

FROM scratch

# Copy binary and config files from /build to root folder of scratch container.
COPY --from=builder ["/build/sender", "/"]

# Command to run when starting the container.
ENTRYPOINT ["/sender"]